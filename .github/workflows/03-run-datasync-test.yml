name: Test DataSync Transfer

on:
  workflow_dispatch:
    inputs:
      task_type:
        description: 'Which task to run'
        required: true
        type: choice
        options:
          - general-files
          - certificates
          - both

jobs:
  run-transfer:
    name: Execute DataSync Transfer
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      
      - name: Start DataSync Task
        id: start
        run: |
          # Get task ARNs
          if [ "${{ github.event.inputs.task_type }}" == "both" ]; then
            TASKS=$(aws datasync list-tasks --query 'Tasks[*].TaskArn' --output json)
          else
            TASK_NAME="test-${{ github.event.inputs.task_type }}-sync"
            TASKS=$(aws datasync list-tasks \
              --query "Tasks[?contains(Name, '$TASK_NAME')].TaskArn" \
              --output json)
          fi
          
          # Start executions
          for TASK_ARN in $(echo $TASKS | jq -r '.[]'); do
            echo "Starting task: $TASK_ARN"
            EXEC_ARN=$(aws datasync start-task-execution \
              --task-arn $TASK_ARN \
              --query 'TaskExecutionArn' \
              --output text)
            echo "execution_arn_$TASK_ARN=$EXEC_ARN" >> $GITHUB_OUTPUT
          done
      
      - name: Monitor Transfer
  run: |
    # Get execution ARNs from previous step
    EXEC_ARNS=$(env | grep "execution_arn_" | cut -d'=' -f2)
    
    for EXEC_ARN in $EXEC_ARNS; do
      echo "Monitoring execution: $EXEC_ARN"
      
      # Loop until task completes
      while true; do
        STATUS=$(aws datasync describe-task-execution \
          --task-execution-arn $EXEC_ARN \
          --query 'Status' --output text)
        
        echo "Status: $STATUS"
        
        if [[ "$STATUS" == "SUCCESS" ]] || [[ "$STATUS" == "ERROR" ]]; then
          # Get final statistics
          aws datasync describe-task-execution \
            --task-execution-arn $EXEC_ARN \
            --query '{Status:Status, BytesTransferred:BytesTransferred, FilesTransferred:FilesTransferred}' \
            --output table
          break
        fi
        
        sleep 30
      done
    done