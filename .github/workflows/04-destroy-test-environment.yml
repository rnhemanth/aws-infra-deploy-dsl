name: Destroy Test Environment

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type DESTROY to confirm'
        required: true
      destroy_aws:
        description: 'Destroy AWS infrastructure'
        type: boolean
        default: true
      destroy_onprem:
        description: 'Destroy on-prem simulation'
        type: boolean
        default: true

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'DESTROY'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      
      - name: Destroy DataSync Configuration
        working-directory: ./datasync-configuration
        continue-on-error: true
        run: |
          terraform init || true
          terraform destroy -auto-approve \
            -var="agent_ip=dummy" \
            -var="windows_ip=dummy" \
            -var="general_bucket=dummy" \
            -var="certs_bucket=dummy" || true
      
      - name: Destroy Connectivity
        working-directory: ./connectivity
        continue-on-error: true
        run: |
          terraform init || true
          terraform destroy -auto-approve \
            -var="onprem_vpc_id=dummy" \
            -var="aws_vpc_id=dummy" || true
      
      - name: Destroy AWS Infrastructure
        if: github.event.inputs.destroy_aws == 'true'
        working-directory: ./aws-infrastructure
        continue-on-error: true
        run: |
          terraform init || true
          terraform destroy -auto-approve \
            -var="environment=test" || true
      
      - name: Destroy On-Prem Simulation
        if: github.event.inputs.destroy_onprem == 'true'
        working-directory: ./on-premises
        continue-on-error: true
        run: |
          terraform init || true
          terraform destroy -auto-approve || true
      
      - name: Manual Cleanup Reminder
        run: |
          echo "If any resources remain, check AWS Console for:"
          echo "- EC2 instances"
          echo "- VPCs and networking"
          echo "- S3 buckets"
          echo "- IAM roles"
          echo "- KMS keys"